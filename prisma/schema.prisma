// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  walletAddress String?   @unique
  kycStatus     KYCStatus @default(PENDING)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  merchant      Merchant?
  transactions  Transaction[]
}

model Merchant {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  apiKey      String   @unique
  webhookUrl  String?
  webhookKey  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  transactions Transaction[]
}

model Transaction {
  id          String    @id @default(cuid())
  merchantId  String
  merchant    Merchant  @relation(fields: [merchantId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  amount      String
  currency    String
  chainId     Int
  status      TransactionStatus @default(PENDING)
  txHash      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([merchantId])
  @@index([userId])
  @@index([status])
}

enum KYCStatus {
  PENDING
  IN_PROGRESS
  APPROVED
  REJECTED
}

enum TransactionStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}
